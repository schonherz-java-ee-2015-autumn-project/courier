<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">

<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:c="http://java.sun.com/jsp/jstl/core"
	xmlns:sec="http://www.springframework.org/security/tags"
	xmlns:p="http://primefaces.org/ui">

<f:view>

	<h:head>
		<title>#{out.pageTitle}</title>
		<!-- Bootstrap 3.3.5 -->
		<h:outputStylesheet library="bootstrap" name="css/bootstrap.min.css" />
		<!-- Font Awesome -->
		<link rel="stylesheet"
			href="https://maxcdn.bootstrapcdn.com/font-awesome/4.4.0/css/font-awesome.min.css" />
		<!-- Ionicons -->
		<link rel="stylesheet"
			href="https://code.ionicframework.com/ionicons/2.0.1/css/ionicons.min.css" />
		<!-- jvectormap -->
		<h:outputStylesheet library="plugins"
			name="vectormap/jquery-jvectormap-1.2.2.css" />
		<!-- Theme style -->
		<h:outputStylesheet library="dist" name="css/AdminLTE.min.css" />
		<!-- AdminLTE Skins. Choose a skin from the css/skins
         folder instead of downloading all of them to reduce the load. -->
		<h:outputStylesheet library="dist" name="css/skins/_all-skins.min.css" />
		<!-- jQuery 2.1.4 -->
		<h:outputScript library="plugins" name="jQuery/jQuery-2.1.4.min.js" />
		<!-- Bootstrap 3.3.5 -->
		<h:outputScript library="bootstrap" name="js/bootstrap.min.js" />
		<!-- FastClick -->
		<h:outputScript library="plugins" name="fastclick/fastclick.min.js" />
		<!-- AdminLTE App -->
		<h:outputScript library="dist" name="js/app.min.js" />

		<script
			src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBo54L8yC4OrNibZr25ggrhv0egXe-Cey4" />
		<script>
			var map;
			var origin;
			var center;
			var destinations = '#{mapBean.addressList}'.split(";");
			var totalDestinations = destinations;
			var lat;
			var lng;
			var directionsDisplay;
			var directionsService = new google.maps.DirectionsService();
			var geocoder;
			var totalDistance = 0;
			var totalDuration = 0;
			var nextDistance = 0;
			var nextDuration = 0;
			
			function calculateDistances() {

				var service = new google.maps.DistanceMatrixService();
				service.getDistanceMatrix({
					origins : [ origin ], //array of origins
					destinations : destinations, //array of destinations
					travelMode : google.maps.TravelMode.DRIVING,
					unitSystem : google.maps.UnitSystem.METRIC,
					avoidHighways : false,
					avoidTolls : false
				}, callback);
			}

			function callback(response, status) {
				if (status != google.maps.DistanceMatrixStatus.OK) {
					alert('Error was: ' + status);
				} else {
					//we only have one origin so there should only be one row
					var routes = response.rows[0];
					var sortable = [];
					//build the waypoints.
					
					var to;
					
					if ('#{mapBean.selectedCargo.status}' == 'Free' || '#{mapBean.selectedCargo.status}' == 'Received')
					to = 0;
					else
					to = 1;

					for (var i = routes.elements.length - 1; i >= to; i--) {
						var rteLength = routes.elements[i].distance.value;
						var rteDuration = routes.elements[i].duration.value;
						totalDistance = totalDistance + rteLength;
						totalDuration = totalDuration + rteDuration;
						sortable.push([ destinations[i], rteLength ]);
					}
					//sort the result lengths from shortest to longest.
					sortable.sort(function(a, b) {
						return a[1] - b[1];
					});
					//build the waypoints.
					var waypoints = [];
					
					nextDistance = routes.elements[0].distance.value;
					nextDuration = routes.elements[0].duration.value;
					
					if ('#{mapBean.selectedCargo.status}' == 'Free' || '#{mapBean.selectedCargo.status}' == 'Reserved'){
					
					var restaurantDistance = routes.elements[0].distance.value;
					var restaurantDuration = routes.elements[0].duration.value;
					totalDistance = totalDistance + restaurantDistance;
					totalDuration = totalDuration + restaurantDuration;
					
					waypoints.push({
							location : destinations[0],
							stopover : true
						});
					}
					for (j = 0; j &lt; sortable.length - 1; j++) {
						waypoints.push({
							location : sortable[j][0],
							stopover : true
						});
					}
					//start address == origin
					var start = origin;
					//end address is the furthest desitnation from the origin.
					var end = sortable[sortable.length - 1][0];
					//calculate the route with the waypoints        
					calculateRoute(start, end, waypoints);
					
				
				}
			}
			//Calculate the route of the shortest distance we found.
			function calculateRoute(start, end, waypoints) {
				var request = {
					origin : start,
					destination : end,
					waypoints : waypoints,
					optimizeWaypoints : true,
					travelMode : google.maps.TravelMode.DRIVING
				};
				directionsService.route(request, function(result, status) {
					if (status == google.maps.DirectionsStatus.OK) {
					 var summaryPanel = document.getElementById('directions-panel');
					 summaryPanel.innerHTML = '';
					 
					 var showTotalDistance = 0;
					 var showTotalDuration = 0;
					 
					 if ('#{mapBean.totalDistance}' == 0){
					 	showTotalDistance = totalDistance;
					 	showTotalDuration = totalDuration;
					 } else {
					 	showTotalDistance = '#{mapBean.selectedCargo.totalDistance}';
					 	showTotalDuration = '#{mapBean.selectedCargo.totalDuration}';
					 }
					 
					 summaryPanel.innerHTML += 
					
					 	 '<div class="alert alert-info">'+
                 				'<h4>'+'#{out.totalRoute}'+'</h4>'+
                  				'<strong><i class="fa fa-globe margin-r-5"></i>'+'#{out.distance}'+'</strong>'+
                  				'<p class="pull-right">'+ showTotalDistance/1000+ ' km</p>'+
                  				'<br></br>'+
                  				'<strong><i class="fa fa-clock-o margin-r-5"></i>'+'#{out.duration}'+'</strong>'+
                  				'<p class="pull-right">'+ (showTotalDuration/60).toFixed(0)+ ' minute(s)</p>'+         				
               				'</div>'+
               				 '<div class="alert alert-info">'+
                 				'<h4>'+'#{out.nextRoute}'+'</h4>'+
                  				'<strong><i class="fa fa-globe margin-r-5"></i>'+'#{out.distance}'+'</strong>'+
                  				'<p class="pull-right">'+ nextDistance/1000+ ' km</p>'+
                  				'<br></br>'+
                  				'<strong><i class="fa fa-clock-o margin-r-5"></i>'+'#{out.duration}'+'</strong>'+
                  				'<p class="pull-right">'+ (nextDuration/60).toFixed(0)+ ' minute(s)</p>'+         				
               				'</div>';
						directionsDisplay.setDirections(result);
						
						
					}
				});
			}
			
			
			function initialize() {
				directionsDisplay = new google.maps.DirectionsRenderer();
				var centerPosition = new google.maps.LatLng(38.713107,
						-90.42984);
				map = new google.maps.Map(document.getElementById('map'), {
					zoom : 14,
					center : {
						lat : 38.713107,
						lng : -90.42984
					}
				});
				geocoder = new google.maps.Geocoder();
				directionsDisplay.setMap(map);
				if (navigator.geolocation) {
					navigator.geolocation.getCurrentPosition(
							function(position) {

								lat = position.coords.latitude;
								lng = position.coords.longitude;
								center = new google.maps.LatLng(lat, lng);

								map.setCenter(center);
								geocodeLatLng();
							}, function() {
								handleLocationError(true, infoWindow, map
										.getCenter());
							});
				} else {
					// Browser doesn't support Geolocation
					handleLocationError(false, infoWindow, map.getCenter());
				}


			}

			function handleLocationError(browserHasGeolocation, infoWindow, pos) {
				infoWindow.setPosition(pos);
				infoWindow
						.setContent(browserHasGeolocation ? 'Error: The Geolocation service failed.'
								: 'Error: Your browser doesn\'t support geolocation.');
			}


			function geocodeLatLng() {

				var latlng = new google.maps.LatLng(lat, lng);
				geocoder.geocode({
					'location' : latlng
				}, function(results, status) {
					if (status === google.maps.GeocoderStatus.OK) {
						if (results[1]) {
							origin = results[1].formatted_address;
							calculateDistances();
						} else {
							window.alert('No results found');
						}
					} else {
						window.alert('Geocoder failed due to: ' + status);
					}
				});
			}

			function getCargoRouteDistance() {
  				document.getElementById("cargoStatus:totalDistance").value = totalDistance;
  				document.getElementById("cargoStatus:totalDuration").value = totalDuration;
			}

			google.maps.event.addDomListener(window, 'load', initialize);
			
		</script>

		<style>
#map {
	margin: 0;
	padding: 0;
	height: 450px;
	width: 100%;
}

.ui-datatable-header {
	background: #dd4b39;
	color: white;
}

.ui-datagrid-content {
	background: transparent;
	border: none;
}

.datatable td {
	background: white;
}

.datatable td {
	font-size: 12px;
}

.ui-datatable thead th, .ui-datatable tfoot td {
	text-align: center;
	font-size: 13px;
}

.ui-datatable .ui-datatable-header, .ui-datatable .ui-datatable-footer {
	text-align: center;
	padding: 4px 11px;
	font-size: 14px;
}

.ui-state-default, .ui-widget-content .ui-state-default,
	.ui-widget-header .ui-state-default {
	border: 1px solid #dd4b39;
	background: none;
	font-weight: small;
	color: #3f3731;
	font-weight: normal;
}

.ui-datatable thead th, .ui-datatable tbody td, .ui-datatable tfoot td,
	.ui-datatable tfoot th {
	padding: 4px 10px;
	overflow: hidden;
	border-width: 1px;
	border-style: solid;
	border-color: #dd4b39;
}

.ui-corner-top {
	-moz-border-radius-topleft: 3px;
	-webkit-border-top-left-radius: 3px;
	border-top-left-radius: 3px;
	-moz-border-radius-topright: 3px;
	-webkit-border-top-right-radius: 3px;
	border-top-right-radius: 3px;
}
</style>
	</h:head>
	<h:body class="hold-transition skin-blue layout-top-nav">


		<header class="main-header"> <nav
			class="navbar navbar-static-top">
		<div class="container">
			<div class="navbar-header">
				<a href="#{request.contextPath}/secured/available.xhtml"
					class="navbar-brand"><b>C</b>ourier</a>
			</div>


		</div>
		</nav> </header>
		<div class="content-wrapper">
			<div class="container">
				<section class="content">
				<div class="row">
					<div class="col-xs-12 col-sm-12 col-md-8">
						<div class="box box-primary">
							<div class="box-header with-border">
								<h3 class="box-title">#{mapBean.selectedCargo.restaurant.name}</h3>

							</div>

							<div class="box-body">
								<div id="map"></div>
								<ul class="list-group list-group-unbordered">
									<li class="list-group-item"><b>#{out.address}</b>
										<p class="pull-right">#{mapBean.selectedCargo.restaurant.address}</p></li>
									<li class="list-group-item"><b>#{out.cargoValue}</b>
										<p class="pull-right">
											<h:outputText value="#{mapBean.selectedCargo.totalValue}">
												<f:convertNumber minFractionDigits="2" />
											</h:outputText>
											HUF
										</p></li>
									<li class="list-group-item"><b>#{out.income}</b>
										<p class="pull-right">
											<h:outputText value="#{mapBean.selectedCargo.income}">
												<f:convertNumber minFractionDigits="2" />
											</h:outputText>
											HUF
										</p></li>
									<li class="list-group-item"><b>#{out.status}</b>
										<p class="pull-right">#{out['cargoStatus.'.concat(mapBean.selectedCargo.status)]}</p></li>
								</ul>
								<p:messages id="errorMessage" showDetail="true"
									autoUpdate="true" closable="true" />
								<p:layout
									rendered="#{mapBean.selectedCargo.status == 'Reserved' or mapBean.selectedCargo.status == 'Received'}">
									<b>#{out.changeStatus}</b>
									<div class="pull-right">
										<h:form id="cargoStatus">
											<h:inputHidden id="totalDistance"
												value="#{mapBean.totalDistance}" />
											<h:inputHidden id="totalDuration"
												value="#{mapBean.totalDuration}" />
											<h:commandButton
												value="#{out['cargoStatus.'.concat('Received')]}"
												rendered="#{mapBean.selectedCargo.status == 'Reserved'}"
												style="margin: 3px;" class="btn btn-success"
												action="#{mapBean.cargoStatusChanged(3)}"
												onclick="getCargoRouteDistance()">
											</h:commandButton>

											<h:commandButton
												value="#{out['cargoStatus.'.concat('Delivered')]}"
												style="margin: 3px;"
												rendered="#{mapBean.selectedCargo.status == 'Received'}"
												class="btn btn-success"
												action="#{mapBean.cargoStatusChanged(4)}"
												disabled="#{mapBean.addresses.size() > 0}">
											</h:commandButton>
										</h:form>
									</div>
								</p:layout>
							</div>

						</div>
					</div>

					<div class="col-xs-12 col-sm-12 col-md-4">
						<div class="box box-info">
							<div class="box-header with-border">
								<h3 class="box-title">#{out.routeInfo}</h3>

							</div>
							<!-- /.box-header -->
							<div class="box-body">
								<div id="directions-panel"></div>
							</div>
						</div>
						<p:layout
							rendered="#{mapBean.selectedCargo.status == 'Reserved' or mapBean.selectedCargo.status == 'Received'}">

							<div class="box box-danger box-solid">
								<div class="box-header with-border">
									<h3 class="box-title">#{out.addresses}</h3>

								</div>

								<div class="box-body">

									<p:dataGrid id="addresses" var="address"
										value="#{mapBean.addresses}" columns="1"
										emptyMessage="#{out.done}">
										<div class="box box-danger box-solid collapsed-box">
											<div class="box-header with-border">
												<h5>#{out.address} #{address.address}</h5>
												<h6>
													#{out.deadline}
													<h:outputText value="#{address.deadline}">
														<f:convertDateTime type="date" pattern="yyyy-MM-dd HH:mm" />
													</h:outputText>
												</h6>
												<div class="box-tools pull-right">
													<button class="btn btn-box-tool" data-widget="collapse">
														<i class="fa fa-plus"></i>
													</button>
												</div>
											</div>
											<!-- /.box-header -->
											<div class="box-body">
												<ul class="list-group list-group-unbordered">

													<li class="list-group-item"><b>#{out.addressValue}</b>
														<p class="pull-right">
															<h:outputText value="#{address.totalValue}">
																<f:convertNumber minFractionDigits="2" />
															</h:outputText>
															HUF
														</p></li>


												</ul>

												<p:dataTable id="table" var="detail"
													value="#{address.details}" styleClass="datatable">
													<f:facet name="header">
      												#{out.items}
   												</f:facet>
													<p:column styleClass="customHeader"
														headerText="#{out.item}">
														<h:outputText value="#{detail.item.name}" />
													</p:column>
													<p:column headerText="#{out.price}">
														<h:outputText value="#{detail.item.price}">
															<f:convertNumber minFractionDigits="2" />
														</h:outputText> HUF
													</p:column>
													<p:column headerText="#{out.quantity}">
														<h:outputText value="#{detail.quantity}" />
													</p:column>
												</p:dataTable>
												<br></br> <b>#{out.payment}</b> <a class="pull-right"> <h:form>
														<h:selectOneMenu id="paymentStatus"
															value="#{address.payment}" class="form-control"
															disabled="#{mapBean.selectedCargo.status == 'Reserved'}">
															<f:ajax event="change" render="paymentStatus"
																listener="#{mapBean.paymentStatusChanged}" />
															<f:attribute name="addressId" value="#{address.id}" />
															<f:selectItems value="#{mapBean.allPaymentStatus}" />
														</h:selectOneMenu>
													</h:form>
												</a>

											</div>

											<div class="box-footer">
												<b>#{out.status}</b>
												<div class="pull-right">
													<h:form>
														<h:commandButton
															value="#{out['addressStatus.'.concat('Delivered')]}"
															class="btn btn-success" style="margin: 3px;"
															action="#{mapBean.addressStatusChanged(address.id, 1)}"
															disabled="#{mapBean.selectedCargo.status == 'Reserved'}">
														</h:commandButton>
														<h:commandButton
															value="#{out['addressStatus.'.concat('Failed')]}"
															class="btn btn-danger" style="margin: 3px;"
															action="#{mapBean.addressStatusChanged(address.id, 2)}"
															disabled="#{mapBean.selectedCargo.status == 'Reserved'}">
														</h:commandButton>
													</h:form>
												</div>
											</div>

											<!-- /.box-body -->
										</div>
										<!-- /.box -->
									</p:dataGrid>

								</div>

							</div>
						</p:layout>

					</div>
				</div>


				</section>
			</div>
		</div>
	</h:body>
</f:view>
</html>